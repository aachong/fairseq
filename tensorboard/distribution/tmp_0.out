save_dir=./examples/entr/bash/../checkpoints/closer-all
还是改了那个没有梯度的dropout=0.0,相当于无dropout
criterion=label_smoothed_cross_entropy_r3f_noised_input
label_smoothing=0.1
dropout=0.3
lr=0.00004
lrscheduler=inverse_sqrt
warmup_updates=3000
max_epoch=200
r3f_lambda=1
extr='--warmup-init-lr 1e-07 --reset-optimizer'
2021-01-16 20:43:20 | INFO | transformers.file_utils | PyTorch version 1.6.0 available.
2021-01-16 20:43:22 | INFO | transformers.file_utils | TensorFlow version 2.2.0 available.
2021-01-16 20:43:23 | INFO | fairseq_cli.train | Namespace(activation_dropout=0.0, activation_fn='relu', adam_betas='(0.9, 0.98)', adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='transformer', attention_dropout=0.0, best_checkpoint_metric='bleu', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_activations=False, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy_r3f_noised_input', cross_self_attention=False, curriculum=0, cv_lambda=0.0, data='./examples/entr/bash/../data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='c10d', decoder_attention_heads=8, decoder_embed_dim=512, decoder_embed_path=None, decoder_ffn_embed_dim=2048, decoder_input_dim=512, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=False, decoder_normalize_before=False, decoder_output_dim=512, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.3, empty_cache_freq=0, encoder_attention_heads=8, encoder_embed_dim=512, encoder_embed_path=None, encoder_ffn_embed_dim=2048, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=False, encoder_normalize_before=False, eps=1e-06, eval_bleu=True, eval_bleu_args='{"beam": 5, "max_len_a": 1.2, "max_len_b": 10}', eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe='sentencepiece', eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, label_smoothing=0.1, layernorm_embedding=False, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format=None, log_interval=100, lr=[4e-05], lr_scheduler='inverse_sqrt', max_epoch=200, max_sentences=None, max_sentences_valid=None, max_source_positions=1024, max_target_positions=1024, max_tokens=6000, max_tokens_valid=6000, max_update=0, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=1e-09, model_parallel_size=1, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=True, no_token_positional_embeddings=False, noise_type='normal', noised_eval_model=False, noised_no_grad=False, nprocs_per_node=1, num_batch_buckets=0, num_workers=1, optimizer='adam', optimizer_overrides='{}', patience=-1, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=None, pipeline_devices=None, pipeline_model_parallel=False, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, r3f_lambda=1.0, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=True, restore_file='checkpoint_last.pt', save_dir='./examples/entr/bash/../checkpoints/closer-all', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, self_training_drc=False, sentence_avg=False, share_all_embeddings=True, share_decoder_input_output_embed=False, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='en', stop_time_hours=0, target_lang='tr', task='translation', tensorboard_logdir='', threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_old_adam=False, user_dir=None, valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_init_lr=1e-07, warmup_updates=3000, weight_decay=0.0, zero_sharding='none')
2021-01-16 20:43:23 | INFO | fairseq.tasks.translation | [en] dictionary: 19784 types
2021-01-16 20:43:23 | INFO | fairseq.tasks.translation | [tr] dictionary: 19784 types
2021-01-16 20:43:23 | INFO | fairseq.data.data_utils | loaded 3000 examples from: ./examples/entr/bash/../data-bin/valid.en-tr.en
2021-01-16 20:43:23 | INFO | fairseq.data.data_utils | loaded 3000 examples from: ./examples/entr/bash/../data-bin/valid.en-tr.tr
2021-01-16 20:43:23 | INFO | fairseq.tasks.translation | ./examples/entr/bash/../data-bin valid en-tr 3000 examples
2021-01-16 20:43:25 | INFO | fairseq_cli.train | TransformerModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(19784, 512, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(19784, 512, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=512, out_features=512, bias=True)
          (v_proj): Linear(in_features=512, out_features=512, bias=True)
          (q_proj): Linear(in_features=512, out_features=512, bias=True)
          (out_proj): Linear(in_features=512, out_features=512, bias=True)
        )
        (encoder_attn_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=512, out_features=2048, bias=True)
        (fc2): Linear(in_features=2048, out_features=512, bias=True)
        (final_layer_norm): FusedLayerNorm(torch.Size([512]), eps=1e-05, elementwise_affine=True)
      )
    )
    (output_projection): Linear(in_features=512, out_features=19784, bias=False)
  )
)
2021-01-16 20:43:25 | INFO | fairseq_cli.train | task: translation (TranslationTask)
2021-01-16 20:43:25 | INFO | fairseq_cli.train | model: transformer (TransformerModel)
2021-01-16 20:43:25 | INFO | fairseq_cli.train | criterion: label_smoothed_cross_entropy_r3f_noised_input (NoisedInputCriterion)
2021-01-16 20:43:25 | INFO | fairseq_cli.train | num. model params: 54267904 (num. trained: 54267904)
2021-01-16 20:43:28 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.embed_tokens.weight
2021-01-16 20:43:28 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.output_projection.weight
2021-01-16 20:43:28 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-01-16 20:43:28 | INFO | fairseq.utils | rank   0: capabilities =  6.1  ; total memory = 10.917 GB ; name = GeForce GTX 1080 Ti                     
2021-01-16 20:43:28 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-01-16 20:43:28 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2021-01-16 20:43:28 | INFO | fairseq_cli.train | max tokens per GPU = 6000 and max sentences per GPU = None
2021-01-16 20:43:29 | INFO | fairseq.trainer | loaded checkpoint ./examples/entr/bash/../checkpoints/closer-all/checkpoint_last.pt (epoch 127 @ 0 updates)
2021-01-16 20:43:29 | INFO | fairseq.optim.adam | using FusedAdam
2021-01-16 20:43:29 | INFO | fairseq.trainer | loading train data for epoch 127
2021-01-16 20:43:29 | INFO | fairseq.data.data_utils | loaded 207373 examples from: ./examples/entr/bash/../data-bin/train.en-tr.en
2021-01-16 20:43:29 | INFO | fairseq.data.data_utils | loaded 207373 examples from: ./examples/entr/bash/../data-bin/train.en-tr.tr
2021-01-16 20:43:29 | INFO | fairseq.tasks.translation | ./examples/entr/bash/../data-bin train en-tr 207373 examples
2021-01-16 20:43:29 | INFO | fairseq.trainer | begin training epoch 127
0.047   0.021   0.106
0.038   0.027   0.102
0.045   0.018   0.108
0.078   0.089   0.114
0.153   0.051   0.122
0.064   0.037   0.11
0.05   0.024   0.108
0.069   0.023   0.103
0.065   0.018   0.107
0.054   0.085   0.173
0.059   0.025   0.103
0.053   0.022   0.105
0.065   0.021   0.104
0.039   0.031   0.136
0.055   0.022   0.102
0.039   0.029   0.105
0.07   0.022   0.108
0.069   0.019   0.104
0.054   0.023   0.103
0.041   0.024   0.104
0.056   0.02   0.105
0.058   0.036   0.151
0.047   0.025   0.106
0.047   0.016   0.103
0.063   0.018   0.101
0.053   0.02   0.103
0.045   0.026   0.111
0.077   0.022   0.109
0.042   0.018   0.102
0.035   0.093   0.2
0.073   0.02   0.108
0.075   0.079   0.112
0.057   0.018   0.102
0.033   0.033   0.111
0.071   0.071   0.111
0.077   0.073   0.121
0.079   0.091   0.112
0.044   0.015   0.108
0.052   0.023   0.104
0.06   0.085   0.111
0.059   0.022   0.109
0.092   0.103   0.127
0.04   0.018   0.106
0.046   0.098   0.114
0.065   0.08   0.116
0.045   0.022   0.104
0.046   0.091   0.16
0.052   0.023   0.104
0.062   0.015   0.105
0.051   0.02   0.103
0.049   0.037   0.102
0.047   0.025   0.102
0.065   0.013   0.107
0.031   0.019   0.129
0.044   0.024   0.102
0.056   0.016   0.106
0.069   0.026   0.101
0.06   0.02   0.107
0.062   0.022   0.107
0.059   0.023   0.102
0.063   0.115   0.114
0.054   0.021   0.103
0.085   0.017   0.105
0.03   0.023   0.105
0.043   0.102   0.115
0.051   0.019   0.104
0.063   0.021   0.103
0.051   0.024   0.108
0.055   0.018   0.108
0.052   0.018   0.106
0.034   0.029   0.163
0.067   0.027   0.107
0.047   0.023   0.105
0.072   0.094   0.109
0.059   0.094   0.11
0.064   0.014   0.105
0.051   0.019   0.106
0.078   0.077   0.113
0.046   0.02   0.101
0.044   0.029   0.11
0.054   0.019   0.106
0.061   0.025   0.105
0.046   0.029   0.107
0.046   0.018   0.102
0.051   0.02   0.105
0.047   0.021   0.105
0.045   0.033   0.117
0.056   0.07   0.109
0.064   0.015   0.105
0.05   0.023   0.103
0.038   0.026   0.134
0.024   0.031   0.146
0.055   0.022   0.108
0.065   0.025   0.106
0.059   0.022   0.107
0.045   0.022   0.104
0.037   0.05   0.183
0.036   0.024   0.117
0.067   0.025   0.104
0.044   0.028   0.103
0.058   0.022   0.103
0.038   0.019   0.102
0.048   0.048   0.121
0.061   0.02   0.108
0.049   0.017   0.106
0.032   0.026   0.109
0.064   0.027   0.102
0.048   0.021   0.104
0.067   0.021   0.107
0.064   0.073   0.108
0.056   0.022   0.105
0.056   0.021   0.107
0.099   0.031   0.099
0.048   0.02   0.106
0.056   0.018   0.105
0.061   0.019   0.103
0.072   0.024   0.107
0.055   0.022   0.103
0.053   0.027   0.104
0.052   0.033   0.101
0.056   0.019   0.105
0.072   0.082   0.114
0.061   0.025   0.106
0.042   0.018   0.105
0.069   0.021   0.106
0.049   0.027   0.106
0.038   0.026   0.108
0.047   0.022   0.102
0.069   0.021   0.105
0.051   0.023   0.106
0.085   0.019   0.103
0.088   0.024   0.102
0.044   0.019   0.104
0.055   0.021   0.103
0.079   0.025   0.102
0.074   0.028   0.101
0.054   0.02   0.104
0.059   0.023   0.104
0.045   0.016   0.105
0.067   0.025   0.104
0.071   0.094   0.117
0.052   0.021   0.106
0.055   0.021   0.105
0.082   0.084   0.114
0.087   0.018   0.1
0.055   0.019   0.105
0.056   0.027   0.1
0.084   0.071   0.117
0.041   0.029   0.102
0.034   0.023   0.159
0.044   0.022   0.101
0.07   0.107   0.115
0.067   0.021   0.104
0.048   0.02   0.102
0.065   0.022   0.104
0.092   0.021   0.102
0.034   0.042   0.121
0.049   0.084   0.184
0.071   0.021   0.105
0.054   0.026   0.103
0.049   0.017   0.101
0.04   0.021   0.101
0.061   0.015   0.104
0.061   0.02   0.107
0.056   0.023   0.105
0.046   0.029   0.103
0.065   0.022   0.104
0.048   0.025   0.106
0.031   0.021   0.127
0.103   0.021   0.101
0.037   0.023   0.1
0.049   0.021   0.103
0.046   0.026   0.107
0.047   0.022   0.105
0.056   0.015   0.102
0.051   0.027   0.108
0.069   0.103   0.111
0.045   0.081   0.11
0.061   0.023   0.105
0.072   0.027   0.107
0.039   0.033   0.103
0.07   0.025   0.105
0.043   0.022   0.1
0.051   0.025   0.102
0.081   0.025   0.107
0.068   0.018   0.104
0.057   0.018   0.105
0.059   0.022   0.107
0.037   0.031   0.117
0.042   0.033   0.106
0.052   0.021   0.104
0.046   0.058   0.113
0.073   0.071   0.108
0.139   0.021   0.101
0.056   0.098   0.111
0.057   0.013   0.104
0.07   0.092   0.114
0.062   0.026   0.105
0.041   0.02   0.105
0.056   0.03   0.105
0.058   0.025   0.102
0.072   0.018   0.101
0.044   0.022   0.105
0.084   0.073   0.107
0.142   0.083   0.112
0.047   0.024   0.106
0.049   0.026   0.107
0.061   0.044   0.108
0.068   0.023   0.101
0.054   0.026   0.102
0.082   0.024   0.107
0.055   0.023   0.104
0.056   0.018   0.103
0.063   0.103   0.115
0.064   0.019   0.105
0.053   0.101   0.109
0.053   0.02   0.103
0.047   0.059   0.108
0.048   0.023   0.1
0.04   0.021   0.107
0.044   0.03   0.144
0.048   0.022   0.101
0.056   0.018   0.106
0.08   0.02   0.102
0.042   0.024   0.103
0.063   0.016   0.102
0.056   0.018   0.103
0.07   0.019   0.106
0.077   0.022   0.099
0.07   0.024   0.105
0.067   0.028   0.106
0.049   0.025   0.102
0.047   0.029   0.102
0.058   0.096   0.111
0.053   0.019   0.1
0.075   0.028   0.106
0.055   0.019   0.104
0.06   0.016   0.101
0.065   0.073   0.107
0.049   0.036   0.102
0.049   0.026   0.103
0.06   0.022   0.103
0.047   0.021   0.104
0.032   0.018   0.127
0.061   0.02   0.106
0.045   0.025   0.104
0.067   0.022   0.102
0.051   0.015   0.101
0.049   0.023   0.101
0.068   0.019   0.108
0.039   0.101   0.207
0.052   0.027   0.1
0.067   0.086   0.108
0.061   0.026   0.1
0.067   0.099   0.108
0.107   0.1   0.125
0.059   0.026   0.102
0.042   0.099   0.18
0.038   0.026   0.1
0.066   0.071   0.107
0.085   0.022   0.1
0.039   0.015   0.1
0.055   0.021   0.105
0.052   0.024   0.102
0.059   0.024   0.101
0.055   0.024   0.105
0.077   0.02   0.107
0.065   0.022   0.105
0.048   0.022   0.105
0.056   0.025   0.102
0.053   0.021   0.108
0.063   0.018   0.105
0.056   0.018   0.102
0.06   0.023   0.101
0.065   0.023   0.108
0.057   0.03   0.102
0.059   0.082   0.108
0.071   0.024   0.1
0.084   0.017   0.103
0.055   0.018   0.102
0.064   0.018   0.102
0.056   0.069   0.124
0.065   0.029   0.1
0.055   0.061   0.108
0.029   0.026   0.134
0.064   0.073   0.107
0.068   0.077   0.109
0.059   0.018   0.103
0.056   0.023   0.105
0.05   0.028   0.103
0.046   0.03   0.103
0.093   0.025   0.106
0.129   0.076   0.109
0.12   0.048   0.121
0.084   0.022   0.106
0.064   0.022   0.102
0.048   0.035   0.112
0.092   0.092   0.107
0.046   0.024   0.103
0.067   0.085   0.116
0.075   0.025   0.099
0.071   0.102   0.109
0.066   0.073   0.107
0.067   0.02   0.106
0.049   0.029   0.112
0.052   0.03   0.101
0.066   0.034   0.105
0.034   0.026   0.151
0.065   0.02   0.099
0.034   0.023   0.106
0.036   0.035   0.099
0.067   0.096   0.111
0.103   0.09   0.126
0.039   0.028   0.172
0.06   0.026   0.105
0.059   0.02   0.102
0.057   0.028   0.104
0.132   0.091   0.125
0.08   0.022   0.102
0.053   0.021   0.104
0.064   0.022   0.102
0.052   0.023   0.104
0.059   0.08   0.108
0.063   0.016   0.1
0.047   0.023   0.1
0.067   0.018   0.101
0.044   0.089   0.107
0.07   0.025   0.102
0.056   0.021   0.104
0.063   0.016   0.102
0.083   0.081   0.108
0.05   0.102   0.109
0.079   0.019   0.101
0.045   0.024   0.101
